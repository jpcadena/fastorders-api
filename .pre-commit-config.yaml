# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_language_version:
  python: python3.11
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: name-tests-test
        args: [ --pytest-test-first ]
      - id: pretty-format-json
        args: [ --autofix ]
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-use-type-annotations
      - id: python-check-mock-methods
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal
      - id: text-unicode-replacement-char

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args:
          - --py3-plus
          - --keep-runtime-typing

#  - repo: https://github.com/codespell-project/codespell
#    rev: v2.4.1
#    hooks:
#      - id: codespell
#        additional_dependencies:
#          - tomli

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      # Run the linter.
      - id: ruff
        args: [ "--fix", "--exit-non-zero-on-fix", "--config",
                "pyproject.toml" ]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      # Run the formatter.
      - id: ruff-format
        args: [ "--config", "pyproject.toml" ]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [ "-c", "pyproject.toml" ]
        additional_dependencies: [ "bandit[toml]" ]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        stages: [ commit-msg ]
        args: [ "--hook", "--commit-msg-file" ]
      - id: commitizen-branch
        stages: [ pre-push ]

  - repo: local
    hooks:
      - id: block-env
        name: Block .env file
        entry: bash -c 'if git diff --cached --name-only | grep -qE "^.env|^.env.example^.env.sample"; then echo ".env files must not be committed" && exit 1; else exit 0; fi'
        language: system
        types: [ text ]
